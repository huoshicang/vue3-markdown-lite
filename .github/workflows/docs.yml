name: 部署 VitePress 文档到 GitHub Pages

# 触发条件：推送到 main 分支时自动运行，或手动触发
on:
  push:
    branches: [ main ]  # 替换为你的主分支名称（如 master）
  workflow_dispatch:  # 允许在 GitHub 界面手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境
    permissions:
      contents: write  # 允许写入仓库内容（包括推送分支）
    steps:
      # 1. 检出代码仓库
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取完整历史，避免构建时出现 Git 信息缺失

      # 2. 设置 Node.js 环境（VitePress 需要 Node.js 18+）
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # 推荐使用 Node.js 18 及以上
          cache: 'npm'  # 缓存 npm 依赖，加速安装

      # 3. 安装项目依赖
      - name: 安装依赖
        run: npm ci  # 使用 ci 命令确保依赖版本严格匹配 package-lock.json

      # 4. 构建 VitePress 文档
      - name: 构建文档
        run: npm run docs:build  # 对应 package.json 中的构建脚本

      # 5. 部署到 GitHub Pages
      - name: 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v4  # 成熟的 GitHub Pages 部署工具
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # 自动生成的 GitHub 令牌（无需手动配置）
          publish_dir: ./docs/.vitepress/dist  # VitePress 构建输出目录（默认路径）
          force_orphan: true  # 强制创建孤立分支（避免历史提交过大）
